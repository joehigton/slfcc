d$placebo_after[d$placebo_before == TRUE] <- FALSE
d$placebo_after[d$placebo_before == FALSE] <- TRUE
d$plausibility_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Plausibility check", "FL_78"),
NA)
d$manipulation_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Manipulation Measure", "FL_78"),
NA)
d$open_write_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Open Write", "FL_78"),
NA)
d$mediation_before <- ifelse(d$DO_BR_FL_78 == "", NA,
f_before(d$DO_BR_FL_78, "Mediation|Morality", "Support"))
# DV: Drop NA
order_1 <- rbind(robustse(lm(support1 ~ placebo_before, data = d))[2,1:2],
robustse(lm(support1 ~ open_write_before, data = d))[2,1:2],
robustse(lm(support1 ~ manipulation_before, data = d)) [2,1:2],
robustse(lm(support1 ~ plausibility_before, data = d))[2,1:2]) %>%
as.data.frame()
d$support_1
d$support_2
d$support_1
d$support_2
############################
# Question Order Effects
# Notes:
# Type A
# placebo test block: FL_84
# outcome measure (support for war) block: FL_78
# Type B
# placebo test block: FL_177
# outcome measure (support for war) block: FL_167
f_before <- function(variable, block_a, block_b) {
res <- rep(NA, length(variable))
for (i in 1:length(variable)) {
res[i] <- gregexpr(pattern = block_a, as.character(variable)[i])[[1]][1] <
gregexpr(pattern = block_b, as.character(variable)[i])[[1]][1]
}
return(res)
}
d$placebo_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "FL_84", "FL_78"),
NA)
d$placebo_after <- NA
d$placebo_after[d$placebo_before == TRUE] <- FALSE
d$placebo_after[d$placebo_before == FALSE] <- TRUE
d$plausibility_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Plausibility check", "FL_78"),
NA)
d$manipulation_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Manipulation Measure", "FL_78"),
NA)
d$open_write_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Open Write", "FL_78"),
NA)
d$mediation_before <- ifelse(d$DO_BR_FL_78 == "", NA,
f_before(d$DO_BR_FL_78, "Mediation|Morality", "Support"))
# DV: Drop NA
order_1 <- rbind(robustse(lm(support_1 ~ placebo_before, data = d))[2,1:2],
robustse(lm(support_1 ~ open_write_before, data = d))[2,1:2],
robustse(lm(support_1 ~ manipulation_before, data = d)) [2,1:2],
robustse(lm(support_1 ~ plausibility_before, data = d))[2,1:2]) %>%
as.data.frame()
names(order_1) <- c("coef", "se")
block_labels <- c("Placebo Tests: Multiple Choice",
"Placebo Test: Open-ended Response",
"Treatment Measure",
"Plausibility Check")
order_1$block <- factor(block_labels)
order_1$block2 <- factor(as.character(order_1$block),
levels = rev(levels(order_1$block)))
# DV: Missing as 2
order_2 <- rbind(robustse(lm(support_2 ~ placebo_before, data = d[!d$berinsky,]))[2,1:2],
robustse(lm(support_2 ~ open_write_before, data = d[!d$berinsky,]))[2,1:2],
robustse(lm(support_2 ~ manipulation_before, data = d[!d$berinsky,])) [2,1:2],
robustse(lm(support_2 ~ plausibility_before, data = d[!d$berinsky,]))[2,1:2]) %>%
as.data.frame()
d <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
d
d$support_1
d$support_2
d <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
d
# load data
data_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/data/'
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
d
d$support_1
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
d <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
d
d %>% virw
d %>% view
d$support_1[10]
d$support_1[11]
d <- d %>% mutate_all(~ gsub('"', '', .))
d
d$support_1
d$support_1[10]
d <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
d <- data.frame(lapply(d, function(x) gsub('"', '', x)))
d
d$support_1
d$support_1[10]
gsub('"','',d$support_1[10])
d$support_1 %>% as.numeric()
d
d %>% as.tibble
tibble(d)
tibble(d)$support_1
tibble(d)$support_1 %>% class
d <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
d <- data.frame(lapply(d, function(x) gsub('"', '', x))) %>% as.tibble
d
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
d
d %>% names
df <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
df <- data.frame(lapply(df, function(x) gsub('"', '', x))) %>% as.tibble
df %>% names
df[] <- map2(df, d, ~ as(.x, class(.y)))
d$V9
d$V9 %>% class
class(d$V9)[1]
df[] <- map2(df, d, ~ as(.x, class(.y)[1]))
df
df[8:ncol(df)]
df[10:ncol(df)]
df[12:ncol(df)]
df[] <- map2(df[12:ncol(df)], d[12:ncol(d)], ~ as(.x, class(.y)[1]))
d
d %>% clas
d %>% class
d[20:50]
d[10:50]
d[13:50]
d[15:50]
df[] <- map2(df[16:ncol(df)], d[16:ncol(d)], ~ as(.x, class(.y)[1]))
df[16:ncol(df)] <- map2(df[16:ncol(df)], d[16:ncol(d)], function(x, y) {
target_class <- class(y)[1]
if (target_class == "labelled") {
suppressWarnings(as.numeric(x))
} else {
as(x, target_class)
}
})
warnings()
df
df$support_1
d <- df
############################
# Question Order Effects
# Notes:
# Type A
# placebo test block: FL_84
# outcome measure (support for war) block: FL_78
# Type B
# placebo test block: FL_177
# outcome measure (support for war) block: FL_167
f_before <- function(variable, block_a, block_b) {
res <- rep(NA, length(variable))
for (i in 1:length(variable)) {
res[i] <- gregexpr(pattern = block_a, as.character(variable)[i])[[1]][1] <
gregexpr(pattern = block_b, as.character(variable)[i])[[1]][1]
}
return(res)
}
d$placebo_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "FL_84", "FL_78"),
NA)
d$placebo_after <- NA
d$placebo_after[d$placebo_before == TRUE] <- FALSE
d$placebo_after[d$placebo_before == FALSE] <- TRUE
d$plausibility_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Plausibility check", "FL_78"),
NA)
d$manipulation_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Manipulation Measure", "FL_78"),
NA)
d$open_write_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Open Write", "FL_78"),
NA)
d$mediation_before <- ifelse(d$DO_BR_FL_78 == "", NA,
f_before(d$DO_BR_FL_78, "Mediation|Morality", "Support"))
# DV: Drop NA
order_1 <- rbind(robustse(lm(support_1 ~ placebo_before, data = d))[2,1:2],
robustse(lm(support_1 ~ open_write_before, data = d))[2,1:2],
robustse(lm(support_1 ~ manipulation_before, data = d)) [2,1:2],
robustse(lm(support_1 ~ plausibility_before, data = d))[2,1:2]) %>%
as.data.frame()
d
f_before <- function(variable, block_a, block_b) {
res <- rep(NA, length(variable))
for (i in 1:length(variable)) {
res[i] <- gregexpr(pattern = block_a, as.character(variable)[i])[[1]][1] <
gregexpr(pattern = block_b, as.character(variable)[i])[[1]][1]
}
return(res)
}
d$placebo_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "FL_84", "FL_78"),
NA)
d$placebo_after <- NA
d$placebo_after[d$placebo_before == TRUE] <- FALSE
d$placebo_after[d$placebo_before == FALSE] <- TRUE
d$plausibility_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Plausibility check", "FL_78"),
NA)
d$manipulation_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Manipulation Measure", "FL_78"),
NA)
d$open_write_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Open Write", "FL_78"),
NA)
d$mediation_before <- ifelse(d$DO_BR_FL_78 == "", NA,
f_before(d$DO_BR_FL_78, "Mediation|Morality", "Support"))
# DV: Drop NA
order_1 <- rbind(robustse(lm(support_1 ~ placebo_before, data = d))[2,1:2],
robustse(lm(support_1 ~ open_write_before, data = d))[2,1:2],
robustse(lm(support_1 ~ manipulation_before, data = d)) [2,1:2],
robustse(lm(support_1 ~ plausibility_before, data = d))[2,1:2]) %>%
as.data.frame()
robustse(lm(support_1 ~ placebo_before, data = d))
robustse(lm(support_1 ~ placebo_before, data = d))[2]
robustse(lm(support_1 ~ placebo_before, data = d))[2,1]
robustse(lm(support_1 ~ placebo_before, data = d))
robustse(lm(support_1 ~ placebo_before, data = d)) %>% as.data.frame()
robustse(lm(support_1 ~ open_write_before, data = d))
robustse(lm(support_1 ~ manipulation_before, data = d))
robustse(lm(support_2 ~ placebo_before, data = d[!d$berinsky,]))
d$support3
d$support_3
d$support
###############################
# ITT / IV Using R1
# ITT estimate of democracy on support for military action
d$support <- ifelse(is.na(d$support_1), d$support_2, d$support_1)
# coding #1: set "don't know" to NA
d$support_1 <- d$support
d$support_1[d$support>5] <- NA
d$support_1 <- relab(old.var = d$support_1, old.labs = 1:5, new.labs = 4:0)
support_1 <- myreg(Y = d$support_1, Z = d$Z, V = d$V)
colnames(support_1) <- c("coef", "SE")
support_1
support_1 <- myreg(Y = d$support_1, Z = d$Z, V = d$V)
######################################
# DEMOCRATIC PEACE SURVEY CODE
# clear work space
rm(list = ls())
# print date and time of run
print("Starting date and time")
Sys.time()
# load packages and functions
R_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/R/'
source(paste0(R_folder, "survey_functions.R"))
# display the output
output_print <- TRUE
# return the main results
return_main <- TRUE
# images directory
images_directory <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/images/'
# grayscale for the graphics or not
#print_colormodel <- "srgb" # in color
print_colormodel <- "grey"
# load data
data_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/data/'
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
df <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
df <- data.frame(lapply(df, function(x) gsub('"', '', x))) %>% as.tibble
df[] <- map2(df[16:ncol(df)], d[16:ncol(d)], ~ as(.x, class(.y)[1]))
######################################
# DEMOCRATIC PEACE SURVEY CODE
# clear work space
rm(list = ls())
# print date and time of run
print("Starting date and time")
Sys.time()
# load packages and functions
R_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/R/'
source(paste0(R_folder, "survey_functions.R"))
# display the output
output_print <- TRUE
# return the main results
return_main <- TRUE
# images directory
images_directory <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/images/'
# grayscale for the graphics or not
#print_colormodel <- "srgb" # in color
print_colormodel <- "grey"
# load data
data_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/data/'
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
df <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
df <- data.frame(lapply(df, function(x) gsub('"', '', x))) %>% as.tibble
df[16:ncol(df)] <- map2(df[16:ncol(df)], d[16:ncol(d)], function(x, y) {
target_class <- class(y)[1]
if (target_class == "labelled") {
suppressWarnings(as.numeric(x))
} else {
as(x, target_class)
}
})
d <- df
##########################################3
# Treatment Assignments Variables
# Democracy Vignette
d$Z <- ifelse(d$d03==1 | d$d08==1 |
d$d09==1 | d$d10==1 | d$d11==1 | d$d13==1 | d$d14==1, 1, 0)
d$Z[d$d02==1 | d$d04==1 | d$d05==1 | d$d06==1 |
d$d07==1 | d$d12==1 | d$d15==1] <- 0
d$Z <- factor(x = d$Z, labels = c("Non-democracy", "Democracy"))
######################################
# DEMOCRATIC PEACE SURVEY CODE
# clear work space
rm(list = ls())
# print date and time of run
print("Starting date and time")
Sys.time()
# load packages and functions
R_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/R/'
source(paste0(R_folder, "survey_functions.R"))
# display the output
output_print <- TRUE
# return the main results
return_main <- TRUE
# images directory
images_directory <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/images/'
# grayscale for the graphics or not
#print_colormodel <- "srgb" # in color
print_colormodel <- "grey"
# load data
data_folder <- '/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/dataverse/data/'
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
df <- read_table("/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/democratic_peace.tab")
df <- data.frame(lapply(df, function(x) gsub('"', '', x))) %>% as.tibble
df[16:ncol(df)] <- map2(df[16:ncol(df)], d[16:ncol(d)], function(x, y) {
target_class <- class(y)[1]
if (target_class == "labelled") {
suppressWarnings(as.numeric(x))
} else {
as(x, target_class)
}
})
d <- df
# Notes:
# Type A
# placebo test block: FL_84
# outcome measure (support for war) block: FL_78
# Type B
# placebo test block: FL_177
# outcome measure (support for war) block: FL_167
f_before <- function(variable, block_a, block_b) {
res <- rep(NA, length(variable))
for (i in 1:length(variable)) {
res[i] <- gregexpr(pattern = block_a, as.character(variable)[i])[[1]][1] <
gregexpr(pattern = block_b, as.character(variable)[i])[[1]][1]
}
return(res)
}
d$placebo_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "FL_84", "FL_78"),
NA)
d$placebo_after <- NA
d$placebo_after[d$placebo_before == TRUE] <- FALSE
d$placebo_after[d$placebo_before == FALSE] <- TRUE
d$plausibility_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Plausibility check", "FL_78"),
NA)
d$manipulation_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Manipulation Measure", "FL_78"),
NA)
d$open_write_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Open Write", "FL_78"),
NA)
d$mediation_before <- ifelse(d$DO_BR_FL_78 == "", NA,
f_before(d$DO_BR_FL_78, "Mediation|Morality", "Support"))
d
d$placebo_before
d$placebo_before %>% table
d$DO_BR_FL_173
d$DO_BR_FL_173 %>% table1
d$DO_BR_FL_173 %>% table
d$placebo_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "FL_84", "FL_78"),
NA)
d$placebo_after <- NA
d$placebo_after[d$placebo_before == TRUE] <- FALSE
d$placebo_after[d$placebo_before == FALSE] <- TRUE
d$plausibility_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Plausibility check", "FL_78"),
NA)
d$manipulation_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Manipulation Measure", "FL_78"),
NA)
d$open_write_before <- ifelse(d$DO_BR_FL_173 == "",
f_before(d$DO_BR_FL_71, "Open Write", "FL_78"),
NA)
d$mediation_before <- ifelse(d$DO_BR_FL_78 == "", NA,
f_before(d$DO_BR_FL_78, "Mediation|Morality", "Support"))
d$placebo_before
d$placebo_before %>% table
gregexpr
?gregexpr
d
d %>% nams
d %>% names
d
d %>% select(starts_with("DO"))
d %>% select(starts_with("DO")) %>% view
load(paste0('/Users/joehigton/Library/Mobile Documents/com~apple~CloudDocs/Downloads/dataverse_files-6/', "democratic_peace.RData"))
d %>% select(starts_with("DO")) %>% view
d
d %>% lapply(nchar())
d %>% lapply(nchar
)
d %>% lapply(mean(nchar))
lapply(d %>% lapply(nchar), mean)
lapply(d %>% lapply(nchar), mean) %>% as.data.frame()
lapply(d %>% lapply(nchar), mean) %>% as.data.frame() %>% pivot_longer()
lapply(d %>% lapply(nchar), mean) %>% as.data.frame() %>% pivot_longer(cols=everything())
lapply(d %>% lapply(nchar), mean) %>% as.data.frame() %>% pivot_longer(cols=everything()) %>% view
d$DO_BR_FL_84
d$DO_BL__A_Post_outcomePlaceboTests
d$DO_BL__A_PlaceboTests_Past_Regular
lapply(d %>% lapply(nchar), mean(., na.rm=T)) %>% as.data.frame() %>% pivot_longer(cols=everything()) %>% view
lapply(d %>% lapply(nchar), function(x)mean(x, na.rm=T)) %>% as.data.frame() %>% pivot_longer(cols=everything()) %>% view
d
d %>% view
d %>% lapply(labels)
d$regions_1_1_Group
d$regions_1_1_Group %>% table
d$plausible
d$support_1
View(df)
library(data.table)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
fread('3_stance_detection/full_annotations.tsv')
fread('GWStance/3_stance_detection/full_annotations.tsv')
fread('GWStance/3_stance_detection/1_MTurk/full_annotations.tsv')
anno<- fread('GWStance/3_stance_detection/1_MTurk/full_annotations.tsv')
demo <- fread('GWStance/3_stance_detection/1_MTurk/anon_subj_info.tsv')
demo
anno$sentence
anno$sentence %>% unique
library(ggplot2)
library(tidyverse)
library(patchwork)
library(data.table)
anno$sentence %>% unique
# basic anova with ICC included ####
analyze_demographic_numeric <- function(data, demographic_col) {
# Fit model
model <- lmer(value ~ factor(get(demographic_col)) + (1|image), data = data)
# Get anova result
anova_result <- anova(model)
# Calculate p-value from F statistic
df_denominator <- nrow(data) - length(unique(data[[demographic_col]])) - 1
f_value <- anova_result$`F value`[1]
p_value <- pf(f_value,
df1 = anova_result$npar[1] - 1,
df2 = df_denominator,
lower.tail = FALSE)
eta_sq <- effectsize::eta_squared(model)
icc_value <- performance::icc(model)
return(data.frame(
demographic = demographic_col,
effect_size = eta_sq$Eta2_partial[1],
f_value = f_value,
p_value = p_value,
icc = icc_value$ICC_adjusted, # Add ICC to the output
n = nrow(data)
))
}
ano <- list()
icc_values <- data.frame() # Create a dataframe to store ICC values
for (var in unique(natrep$varLabel)) {
data_subset <- natrep[natrep$varLabel == var, ]
demographic_effects <- map_dfr(
c("income", "educ", "gender", "race", "party"),
~analyze_demographic_numeric(data_subset, .x)
) %>%
mutate(p_adj = p.adjust(p_value, method = "bonferroni")) %>%
arrange(desc(effect_size))
demographic_effects$var <- var
# Store the ICC value (should be the same for all demographics within a var)
icc_values <- rbind(icc_values, data.frame(
var = var,
icc = demographic_effects$icc[1]
))
ano[[var]] <- demographic_effects
}
library(marginaleffects)
install.packages('marginaleffects')
library(marginaleffects)
library(lme4)
library(gridExtra)
library(tidyverse)
library(survey)
library(effectsize)  # for effect size calculations
install.packages('effectsize')
library(marginaleffects)
library(lme4)
library(gridExtra)
library(tidyverse)
library(survey)
library(effectsize)  # for effect size calculations
library(egg)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## load data ###
nlp<-read_csv('nlpositionality_toxicity_raw.csv')
dh<-read_csv('2021/Dynamically Generated Hate Dataset v2.1.csv')
